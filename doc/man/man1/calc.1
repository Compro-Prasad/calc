.TH calc 1 2016-06-03
.SH NAME
calc \- A powerful expression calculator for the command line
.SH SYNOPSIS
.B calc
.RI [ option ]
.RI [ command ]
.RI [ expression ]
\&...
.SH DESCRIPTION
.LP
The calculator can be run either directly from the shell or fully opened up for
calculations. If you have already generated a script of valid commands for the
calculations you can just use the
.B \-f
.I FILE
option where
.I FILE
should be the file containing the calc
.I direct input
commands. If you don't want to
get to the console just use the
.B \-q
option.
.LP
You may not be so lucky that both the modes i.e.
.B SHELL_INPUT
mode and
.B DIRECT_INPUT
mode macros were enabled during compilation. So, in such a case you can either
directly enter into the calculator console or operate from the shell only (i.e.
you will be unable to open up the calculator console).
.LP
In such a case you have to get the source compiled again by defining the
.B SHELL_INPUT
and/or
.B DIRECT_INPUT
macros. In the actual source code these are enabled by default.
.LP
.LP
The shell options have some simple rules:
.br
.B 1)
Option types: short, long and negate(if required).
.br
.B 2)
Short options can be grouped together in a single argument.
.br
.B 3)
Short options should always start with a
.B \-
character.
.br
.B 4)
Long options cannot be grouped together within a single argument.
.br
.B 5)
Long options should always start with a
.B \-\^\-
character.
.br
.B 6)
Negations should be prefixed by character
.B N
\&.
.SH OPTIONS
Every listing follows a simple rule: first is a short option, second is a long
option and the rest(if any) are direct input commands
.SS "Options that cannot be negated"
.TP
.BR \-h ", " \-\^\-help ", " help
Prints a brief list of shell options if the shell option is used instead of
the
.I direct input
command. If the
.B help
command is used without any argument then it prints a list of sections which
can be further looked into separately by specifying the section as an argument.
.br
.B Example:
.br
The commands
.in +4n
.br
.B calc --help
.br
.B calc -h
.br
.in
print the same
.I shell help
\&. But for printing help related to a specific section
use:
.in +4n
.br
.B calc \&"help constants"
.br
.in
where it will print
.I direct input
commands related to constants. Remember that
it is different from
.B calc help constants
\&. The latter will produce a list of help sections and constants(due to the
.B constants
argument). Do checkout the help sections for
.I direct input
elaboration.
.TP
.BR \-f " " FILE ", " \-\^\-file " " FILE
This option reads lines from
.B FILE
and processes it as if you were entering those lines from the calculator prompt
itself. This may be really usefull when you don't like to enter shell options.
Or in cases where you just don't wan't to go and type at the calculator prompt
itself.
.TP
.BR \-i " " NUM ", " \-\^\-input-length " " NUM ", " input " " length " " NUM
This option always requires a numerical argument that can be calculated. Here
.B NUM
can be any valid expression where
.B NUM
actually represents the end integral result which will further be passed to
.I strMAX
for limiting the input from exceeding
.B NUM
characters.
.IP
The default value of
.I strMAX
is 1000 i.e. you can enter only 998 characters at the calc prompt. And, the
minimum value of
.B NUM
is 25. If
.B NUM
is lesser than 25 then an error is reported to the screen.
.IP
.I strMAX
is a source code variable which is actually set to
.B NUM \+ 2
where one is for
.BI NULL
character while the other one is usually unused and kept for safety purposes.
This has affect only on objects of
.I class strings
and during
.I direct input
only.
.TP
.BR \-A ", " \-\^\-angle-type ", " deg ", " rad ", " grad
The angle type can be changed to
.B deg
for degree mode
.B rad
for radian mode and
.B grad
for gradian mode. The shell option requires a single argument specifying one of
the angle modes. The default mode is
.B deg
mode.
.TP
.BR \-C ", "\-\^\-clear ", "clear
This option clears the screen at that moment and doesnot require extra
arguments.
.TP
.BR \-c " "NAME " "VALUE ", "\-\^\-constant " "NAME " "VALUE ", "constant " "NAME=VALUE
The
.I shell input
requires two arguments but
.I direct input
accepts a single argument separated by an
.B =
\&. The first argument/part is for
.B NAME
of the constant and the second one is for the
.B VALUE
of the constant which should be a valid expression that can be calculated. The
.B NAME
should contain none other than alphabets or '_' character.
.TP
.BR \-p " "PROMPT ", "\-\^\-prompt " "PROMPT ", "prompt=PROMPT
This option requires a single argument for the
.I shell input
but an
.B =
separated string for
.I direct input
\&.
.B PROMPT
should be a string of characters not exceeding 498 characters. If more are
given then the first 498 will be considered.
.TP
.BR \-F " "NUM ", "\-\^\-factorize " "NUM ", "factorize " "NUM
This option always takes an expression that is calculated first, then positive
integral part is extracted and is factorized and the factors are printed on the
screen.
.TP
.BR \-S ", "\-\^\-sum ", " sum
Four arguments to the option:
.BR LOWER " "LIMIT ", "UPPER " "LIMIT ", "RATE " and " EXPRESSION
should be passed in order mentioned where each argument should be a constant
that can be calculated independant from each other.
.BR EXPRESSION
may or may not contain the character
.I i
which when given will vary the value at that position from
.BR LOWER " "LIMIT
to
.BR UPPER " "LIMIT
increasing at rate of
.BR RATE
\&.
.IP
In the
.I direct input
mode the arguments should be separated by space i.e. there should be no space
within the arguments(except the last one). But in case of
.I shell input
mode space is allowed if you have placed the argument within quotes.
.br
.B Example:
.in +4n
The command
.br
.B calc -S \&"3 - 3" 100 1 \&"1/ i!"
.br
will work well but
.br
.B calc \&"sum 3 - 3 100 1 1/ i!"
.br
would give an error because it is a
.I direct input
command and as specified, it will not accept any spaces within arguments but it
can be done
through the shell option.
.in
.IP
Let us break the valid case into small parts. The first argument
.B calc
is the program's name. The econd
argument
.B \-S
starts the summing operation. The third argument
.B 3 \- 3
is the
.BR LOWER " "LIMIT
of the sum which evaluates to
.B 0
\&. The fourth argument
.B 100
is the
.BR UPPER " "LIMIT
of the sum. The fifth argument
.B 1
is the
.BR RATE
of the sum. The sixth argument
.B 1/i!
is the
.BR EXPRESSION
which will be summed up where
.I i
is the variable quantity.
.IP
The sum of the series generated by the command given above is
.br
.B 1/0! + 1/1! + 1/2! + ... + 1/98! + 1/99! + 1/100!
.TP
.BR \-P " "NUM ", "\-\^\-precision " "NUM ", "precision=NUM
This option takes an argument that can be calculated, extracts the integral
part and sets the precision to not exceed
.BR NUM
decimal places.
.IP
The default value is 5. While the precision can be a very big integer(max 999)
but it is recommended that you use upto max 15 decimal places with the
exponential option switched on because the values after 15 decimal places is
generally a garbage collection of numbers.
.SS "Options that can be negated if necessary"
.TP
.BR \-[N]q ", "\-\^\-[N]quit ", "exit
This shell option prevents entering into
.I direct intput
mode and when negated will force enter into
.I direct input
mode while
.B exit
fully quits the program at that moment only.
.br
.BI [ DEFAULT ]
= not negated
.TP
.BR \-[N]e ", "\-\^\-[N]show-exp ", "show/hide " "e
This option shows exponential when showing the result and hides it when
negated.
.br
.BI [ DEFAULT ]
= not negated
.TP
.BR \-[N]w ", "\-\^\-[N]welcome
This hides the welcome message that is showed on entering into the
.I direct input
mode when negated and shows it when not negated.
.br
.BI [ DEFAULT ]
= not negated
.TP
.BR \-[N]a ", "\-\^\-[N]store-answers ", "start/stop " "storing
This stores all answers generated by each calculation since its enabling and
stops storing answers when negated.
.br
.BI [ DEFAULT ]
= not negated
.TP
.BR \-[N]o ", "\-\^\-[N]show-optr-details ", "show/hide " "operator " "details
This option shows inner operations happening on operators while calculating an
expression and hides the details when negated.
.br
.BI [ DEFAULT ]
= negated
.TP
.BR \-[N]n ", "\-\^\-[N]show-num-details ", "show/hide " "number " "details
This option shows inner operations happening on numbers while calculating an
expression and hides the details when negated.
.br
.BI [ DEFAULT ]
= negated
.TP
.BR \-[N]s ", "\-\^\-[N]show-steps ", "show/hide " "steps
This options shows steps while the calculation is being processed. It only
shows the calculation that just was carried out.
.br
For example,
.in +4m
3+3/2
.in
would show steps like given below:
.in +4m
3 / 2 = 1.5
.br
3 + 1.5 = 4.5
.in
It hides all of them if negated.
.br
.BI [ DEFAULT ]
= negated
.TP
.BR \-[N]t ", "\-\^\-show-processing-time ", "show/hide " "processing " "time
This option shows processing time taken by each action (including calculations)
only and hides it when negated.
.br
.BI [ DEFAULT ]
= negated
.TP
.BR \-[N]r ", "\-\^\-[N]start-recording ", "start/stop " "recording
This option starts recording the time needed by each action (including
calculations) and when stopped or negated dumps average time
from the time of start of recording till before stopping the recording and
resets timer.
.br
.BI [ DEFAULT ]
= negated
